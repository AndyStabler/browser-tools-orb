description: >
  Install Mozilla's Firefox browser, for use in browser testing. Requires
  apt-get, gpg, curl, sha256sum, tar, jq

parameters:
  version:
    type: string
    default: latest
    description: >
      Version of Firefox to install, defaults to the latest stable release.
      To install an older release, specify a full semantic version number,
      e.g., 66.0.3, 53.0, etc. For a list of releases, see the following:
      https://archive.mozilla.org/pub/firefox/releases/

  install-dir:
    type: string
    default: /usr/local/bin
    description: >
      Directory in which to install Firefox

steps:
  - run:
      name: Install Firefox
      command: |
        if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi

        # grab Firefox version
        if [[ <<parameters.version>> == "latest" ]]; then
          # extract latest version from mozilla product details API

          FIREFOX_VERSION_STRING=$(curl \
            https://product-details.mozilla.org/1.0/firefox_versions.json | \
            jq '.LATEST_FIREFOX_VERSION')

          # strip leading/trailing "
          temp="${FIREFOX_VERSION_STRING%\"}"
          FIREFOX_VERSION="${temp#\"}"
          echo "Latest stable version of Firefox is $FIREFOX_VERSION"
        else
          FIREFOX_VERSION=<<parameters.version>>
          echo "Selected version of Firefox is $FIREFOX_VERSION"
        fi

        # check if Firefox needs to be installed
        if command -v firefox >> /dev/null 2>&1; then
          if firefox --version | grep "$FIREFOX_VERSION" >> /dev/null 2>&1; then
            echo "firefox $FIREFOX_VERSION is already installed"
            exit 0
          else
            echo "A different version of Firefox is installed ($(firefox --version)); removing it"
            $SUDO rm -f $(command -v firefox)
          fi
        fi

        # create Firefox download URL base
        FIREFOX_URL_BASE="https://archive.mozilla.org/pub/firefox/releases/$FIREFOX_VERSION"

        echo "$FIREFOX_URL_BASE"

        # import public key
        if uname -a | grep Darwin >> /dev/null 2>&1; then
          HOMEBREW_NO_AUTO_UPDATE=1 brew install gnupg coreutils
        elif cat /etc/issue | grep Alpine >> /dev/null 2>&1; then
          $SUDO apk add perl
        fi

        curl --silent --show-error --location --fail --retry 3 "$FIREFOX_URL_BASE/KEY" | gpg --import

        # download shasum256
        curl -O --silent --show-error --location --fail --retry 3 "$FIREFOX_URL_BASE/SHA256SUMS.asc"
        curl -O --silent --show-error --location --fail --retry 3 "$FIREFOX_URL_BASE/SHA256SUMS"

        # verify shasum256
        gpg --verify SHA256SUMS.asc SHA256SUMS
        rm -rf SHA256SUMS.asc

        # download firefox
        if uname -a | grep Darwin >> /dev/null 2>&1; then
          FIREFOX_FILE="Firefox%20$FIREFOX_VERSION.dmg"
          PLATFORM=mac
          FILE_EXT=dmg
        else
          FIREFOX_FILE="firefox-$FIREFOX_VERSION.tar.bz2"
          PLATFORM=linux-x86_64
          FILE_EXT=tar.bz2
        fi

        FIREFOX_FILE_LOCATION="$PLATFORM/en-US/$FIREFOX_FILE"
        FIREFOX_FILE_NAME="$PLATFORM-en-US-$FIREFOX_FILE"

        curl --silent --show-error --location --fail --retry 3 \
          --output "$FIREFOX_FILE_NAME.$FILE_EXT" \
          "$FIREFOX_URL_BASE/FIREFOX_FILE_LOCATION"

        if uname -a | grep Darwin >> /dev/null 2>&1; then
          echo "no PGP data for macOS Firefox releases"
        else
          curl --silent --show-error --location --fail --retry 3 \
            --output "$FIREFOX_FILE_NAME.asc" \
            "$FIREFOX_URL_BASE/$PLATFORM/en-US/$FIREFOX_FILE.asc"

          # verify download archive
          gpg --verify "$FIREFOX_FILE_NAME.asc" "$FIREFOX_FILE_NAME"
          rm -rf "$FIREFOX_FILE_NAME.asc"
        fi

        perl -i -pe "s%$PLATFORM/en-US/firefox%$PLATFORM-en-US-firefox%g" SHA256SUMS
        grep "$FIREFOX_FILE_NAME" SHA256SUMS | sha256sum -c -
        rm -rf SHA256SUMS

        # setup firefox installation
        if uname -a | grep Darwin >> /dev/null 2>&1; then
          hdiutil attach "$FIREFOX_FILE_NAME.$FILE_EXT"
        else
          $SUDO tar -xvjf "$FIREFOX_FILE_NAME.$FILE_EXT" -C <<parameters.install-dir>>
        fi

        rm -rf "$FIREFOX_FILE_NAME"

        if uname -a | grep Darwin >> /dev/null 2>&1; then
          echo "mac"
        elif cat /etc/issue | grep Alpine >> /dev/null 2>&1; then
          echo "alpine"
        else
          $SUDO apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3
        fi

        # verify version
        echo "$(firefox --version) has been installed to $(which firefox)"
