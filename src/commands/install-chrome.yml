description: >
  Install Google's Chrome browser, for use in browser testing. Note:
  only the latest stable release can be installed, as Google does not
  maintain a public archive of previous releases. Supports Debian/Ubuntu
  Linux, Alpine Linux (via Chromium), and macOS environments.

parameters:
  replace-existing:
    type: boolean
    default: false
    description: >
      If there is an existing installation of Google Chrome, replace it with the latest stable release

steps:
  - run:
      name: Install Google Chrome
      command: |
        if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi

        installation_check () {
          if uname -a | grep Darwin > /dev/null 2>&1; then
            if ls /Applications | grep "Google Chrome"; then

            <<#parameters.replace-existing>>echo "$(/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --version)is currently installed; replacing it"

              $SUDO rm -rf /Applications/Google\ Chrome.app<</parameters.replace-existing>><<^parameters.replace-existing>>echo "$(/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --version)is already installed"

              exit 0<</parameters.replace-existing>>

            else
              echo "Google Chrome is not currently installed; installing it"
            fi
          elif cat /etc/issue | grep Alpine > /dev/null 2>&1; then
            if command -v chromium-browser > /dev/null 2>&1; then

              <<#parameters.replace-existing>>echo "$(chromium-browser --version)is currently installed; replacing it"

              $SUDO rm -f $(command -v chromium-browser)"<</parameters.replace-existing>><<^parameters.replace-existing>>echo "$(chromium-browser --version)is already installed to $(which chromium-browser)"

              exit 0<</parameters.replace-existing>>

            else
              echo "Google Chrome (via Chromium) is not currently installed; installing it"
            fi
          else
            if command -v google-chrome > /dev/null 2>&1; then

              <<#parameters.replace-existing>>echo "$(google-chrome --version)is currently installed; replacing it"

              $SUDO rm -f $(command -v google-chrome)"<</parameters.replace-existing>><<^parameters.replace-existing>>echo "$(google-chrome --version)is already installed to $(which google-chrome)"

              exit 0<</parameters.replace-existing>>

            else
              echo "Google Chrome is not currently installed; installing it"
            fi
          fi
        }

        installation_check

        if uname -a | grep Darwin > /dev/null 2>&1; then
          brew update > /dev/null && \
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install google-chrome > /dev/null

          # https://developers.google.com/web/updates/2017/04/headless-chrome

          # alias google-chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"

          echo -e "#\!/bin/bash\n" > google-chrome
          perl -i -pe "s|#\\\|#|g" google-chrome
          echo -e "/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome \"\$@\"" >> google-chrome

          $SUDO mv google-chrome /usr/local/bin
          $SUDO chmod +x /usr/local/bin/google-chrome

          # verify version
          echo "$(google-chrome --version)has been installed in the /Applications directory"
          echo "A shortcut has also been created at $(which google-chrome)"
        elif cat /etc/issue | grep Alpine > /dev/null 2>&1; then
          # https://github.com/Zenika/alpine-chrome/blob/master/Dockerfile

          echo @edge http://nl.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories
          echo @edge http://nl.alpinelinux.org/alpine/edge/main >> /etc/apk/repositories

          apk add --no-cache \
            chromium@edge \
            harfbuzz@edge \
            nss@edge \
            freetype@edge \
            ttf-freefont@edge \
            > /dev/null

          rm -rf /var/cache/*
          mkdir /var/cache/apk

          # verify installation
          echo "$(chromium-browser --version)has been installed to $(which chromium-browser)"
        else
          # download chrome
          curl --silent --show-error --location --fail --retry 3 \
            --output google-chrome-stable_current_amd64.deb \
            https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

          $SUDO apt-get update > /dev/null 2>&1 && $SUDO apt-get install -y apt-utils fonts-liberation libappindicator3-1 libasound2 libatk-bridge2.0-0 libatk1.0-0 libatspi2.0-0 libcairo2 libcups2 libdbus-1-3 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libnss3 libpango-1.0-0 libpangocairo-1.0-0 libxcomposite1 libxcursor1 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 lsb-release xdg-utils > /dev/null 2>&1

          # setup chrome installation
          $SUDO dpkg -i google-chrome-stable_current_amd64.deb > /dev/null

          rm -rf google-chrome-stable_current_amd64.deb

          # verify installation
          echo "$(google-chrome --version)has been installed to $(which google-chrome)"
        fi
